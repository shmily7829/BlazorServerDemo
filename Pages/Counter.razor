@page "/counter"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage localStore


<input class="input" type="number" @bind="inputValue" />
<p>Current count: @currrentValue</p>

<CountComponent OnCurrentValueChange=IncrementCount InputValue=inputValue></CountComponent>
<CounterL2></CounterL2>

@code {

    public int inputValue = 2;
    public int currrentValue = 0;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var result = await localStore.GetAsync<int>("count");
            currrentValue = result.Success ? result.Value : 0;
            StateHasChanged();
        }
    }

    /// <summary>
    /// 增加
    /// </summary>
    /// <param name="result"></param>
    protected async Task IncrementCount(int result)
    {
        currrentValue = result;
        await localStore.SetAsync("count", currrentValue);
    }

}